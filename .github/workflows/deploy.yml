name: Build and Deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/ImageCompressionApi/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/imagecompression-api

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./backend/ImageCompressionApi

    - name: Build application
      run: dotnet build --configuration Release --no-restore
      working-directory: ./backend/ImageCompressionApi

    - name: Test application
      run: dotnet test --configuration Release --no-build --verbosity normal
      working-directory: ./backend/ImageCompressionApi
      continue-on-error: true

  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./backend/ImageCompressionApi
        file: ./backend/ImageCompressionApi/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Deploy to production server
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: 118.107.233.236
        username: ubuntu
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          echo "üöÄ Pulling latest Docker image..."
          docker pull ghcr.io/${{ github.repository }}/imagecompression-api:latest
          
          echo "üõë Stopping old container (if running)..."
          docker stop imagecompression-api || true
          docker rm imagecompression-api || true

          echo "‚ñ∂Ô∏è Starting new container..."
          docker run -d --name imagecompression-api -p 10000:10000 ghcr.io/${{ github.repository }}/imagecompression-api:latest